/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/**\n * !(i)\n * Код попадает в итоговый файл, только когда вызвана функция, например FLSFunctions.spollers();\n * Или когда импортирован весь файл, например import \"files/script.js\";\n * Неиспользуемый код в итоговый файл не попадает.\n\n * Если мы хотим добавить модуль следует его раскомментировать\n */\n// import MousePRLX from './libs/parallaxMouse'\n// import AOS from 'aos'\n// import Swiper, { Navigation, Pagination } from 'swiper';\n\n//import BaseHelpers from './helpers/BaseHelpers';\n//import PopupManager from './modules/PopupManager';\n//import BurgerMenu from './modules/BurgerMenu';\n//import Tabs from './modules/Tabs';\n//import Accordion from './modules/Accordion';\n\n//import './modules/custom-checkboxes';\n//import './modules/custom-file-upload';\n\n//BaseHelpers.checkWebpSupport();\n\n//BaseHelpers.addTouchClass();\n\n//BaseHelpers.addLoadedClass();\n\n//BaseHelpers.headerFixed();\n\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\n  setTimeout(function () {\n    document.documentElement.classList.add('loaded');\n  }, 100); // Задержка в 2000 миллисекунд (2 секунды)\n\n  new WOW().init();\n\n  // sticky header\n  window.addEventListener('scroll', myFunction);\n  var header = document.querySelector(\"header\");\n  function myFunction() {\n    // Проверяем, содержит ли header класс 'header-is-fixed'\n    if (header.classList.contains('header-is-fixed')) {\n      var sticky = header.offsetTop; // Определяем позицию заголовка\n\n      if (window.scrollY > sticky) {\n        header.classList.add(\"scroll\");\n      } else {\n        header.classList.remove(\"scroll\");\n      }\n    }\n  }\n\n  // Mixed cards color\n  function applyColors(elements, colors, active) {\n    if (!active) return;\n    elements.forEach(function (element, index) {\n      var colorIndex = index % colors.length;\n      element.style.backgroundColor = colors[colorIndex];\n    });\n  }\n  if (document.querySelector('.service-card.mixed-color')) {\n    var colors = ['#ffe9e9', '#fbf1e8', '#fff9e4', '#efe4f1', '#eff5f9', '#ffe8d8', '#f5f5f5', '#eeebfa', '#e4eafd', '#f5f5f5', '#f5f4e5', '#fdf0eb'];\n    var cards = document.querySelectorAll('.service-card.mixed-color');\n    var useColor = true;\n    applyColors(cards, colors, useColor);\n  }\n  if (document.querySelector('.category-card.mixed-color')) {\n    var _colors = ['#babaee', '#c6e89a', '#faefd8', '#ffdaad', '#95e2df', '#f4b9bb'];\n    var categoryCards = document.querySelectorAll('.category-card.mixed-color');\n    var _useColor = true;\n    applyColors(categoryCards, _colors, _useColor);\n  }\n\n  // servicesSlider\n  if (document.querySelector('.servicesSlider')) {\n    var swiper = new Swiper('.servicesSlider', {\n      grabCursor: true,\n      spaceBetween: 5,\n      slidesPerView: 2,\n      loop: true,\n      autoplay: {\n        delay: 5000\n      },\n      grid: {\n        rows: 2\n      },\n      breakpoints: {\n        360: {\n          slidesPerView: 3\n        },\n        576: {\n          slidesPerView: 4\n        },\n        992: {\n          slidesPerView: 5,\n          spaceBetween: 10\n        },\n        1400: {\n          slidesPerView: 6,\n          spaceBetween: 10\n        }\n      },\n      navigation: {\n        nextEl: \".swiper-navigation .swiper-button-next\",\n        prevEl: \".swiper-navigation .swiper-button-prev\"\n      }\n    });\n  }\n\n  // servicesCircledSlider\n  if (document.querySelector('.servicesCircledSlider')) {\n    var _swiper = new Swiper('.servicesCircledSlider', {\n      grabCursor: true,\n      spaceBetween: 5,\n      slidesPerView: 3,\n      loop: true,\n      autoplay: {\n        delay: 5000\n      },\n      grid: {\n        rows: 2\n      },\n      breakpoints: {\n        360: {\n          slidesPerView: 3\n        },\n        470: {\n          slidesPerView: 4\n        },\n        576: {\n          slidesPerView: 5\n        },\n        992: {\n          slidesPerView: 6,\n          spaceBetween: 0,\n          grid: {\n            rows: 1\n          }\n        },\n        1200: {\n          slidesPerView: 8,\n          spaceBetween: 0,\n          grid: {\n            rows: 1\n          }\n        }\n      },\n      navigation: {\n        nextEl: \".swiper-navigation .swiper-button-next\",\n        prevEl: \".swiper-navigation .swiper-button-prev\"\n      }\n    });\n  }\n  if (document.querySelector('.favorite-icon')) {\n    var favoriteButtons = document.querySelectorAll('.favorite-icon');\n    favoriteButtons.forEach(function (button) {\n      button.addEventListener('click', function (event) {\n        event.preventDefault();\n        button.classList.toggle('active');\n        var cardElement = button.closest('.recommendation-card');\n        if (cardElement) {\n          cardElement.classList.toggle('favorite');\n        }\n      });\n    });\n  }\n\n  // imask\n  var inputPhones = document.querySelectorAll('.imask');\n  inputPhones.forEach(function (input) {\n    var maskOptions = {\n      mask: '+{7} (000) 000-00-00'\n    };\n    IMask(input, maskOptions);\n  });\n\n  // Находим все блоки, которые нужно сворачивать/разворачивать\n  var wrappers = document.querySelectorAll('[data-more=\"wrapper\"]');\n\n  // Проходимся по каждому блоку\n  wrappers.forEach(function (wrapper) {\n    // Находим контент и кнопку внутри текущего блока\n    var content = wrapper.querySelector('[data-more=\"content\"]');\n    var button = wrapper.querySelector('[data-more=\"button\"]');\n\n    // Функция для скрытия элементов\n    function hideElements(count) {\n      var elements = content.children;\n\n      // Скрываем лишние элементы\n      for (var i = count; i < elements.length; i++) {\n        elements[i].style.display = 'none';\n      }\n    }\n\n    // Изначально скрываем лишние элементы\n    hideElements(getCountByWindowSize());\n\n    // Обработчик клика по кнопке\n    button.addEventListener('click', function () {\n      // Переключаем видимость элементов\n      toggleElements();\n    });\n    var isContentVisible = false;\n\n    // Функция для переключения видимости элементов\n    function toggleElements() {\n      var elements = content.children;\n      var defaultCount = getCountByWindowSize();\n      var buttonName = wrapper.querySelector('[data-more=\"button\"]').getAttribute('data-more-name');\n      var buttonNameHide = wrapper.querySelector('[data-more=\"button\"]').getAttribute('data-more-name-hide');\n\n      // Переключаем видимость элементов\n      for (var i = 0; i < elements.length; i++) {\n        if (i >= defaultCount) {\n          elements[i].style.display = elements[i].style.display === 'none' ? '' : 'none';\n        }\n      }\n\n      // Меняем текст кнопки в зависимости от состояния\n      var buttonTextElement = button.querySelector('.data-more__text');\n      buttonTextElement.innerText = isContentVisible ? buttonName : buttonNameHide;\n\n      // Обновляем состояние\n      isContentVisible = !isContentVisible;\n    }\n\n    // Функция для получения количества элементов в зависимости от размера окна\n    function getCountByWindowSize() {\n      var windowWidth = window.innerWidth;\n      var classList = Array.from(content.classList);\n      var count;\n      var newCount;\n      for (var i = 0; i < classList.length; i++) {\n        var className = classList[i];\n        var match = className.match(/content--(\\w+)-(\\d+)/);\n        if (match) {\n          var resolution = match[1];\n          count = match[2];\n          var countParse = parseInt(count, 10);\n          if (resolution <= windowWidth) {\n            newCount = count;\n          }\n        }\n      }\n      return parseInt(newCount, 10);\n    }\n\n    // Обработчик изменения размера окна\n    window.addEventListener('resize', function () {\n      // Получаем текущее количество элементов\n      var currentCount = getCountByWindowSize();\n\n      // Скрываем или показываем элементы в зависимости от изменения размера окна\n      hideElements(currentCount);\n    });\n  });\n});\n\n//# sourceURL=webpack:///./main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./main.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;